from config import bot
from utils.state_manager import state_cache
import telebot.types as types
import re

@bot.callback_query_handler(func=lambda call: call.data == "üìä Characteristics")
def show_characteristics(call):
    chat_id = call.message.chat.id

    if not isinstance(chat_id, int):
        print(f"‚ö†Ô∏è Error: chat_id should be an integer, not {type(chat_id)}")
        return

    # ‚úÖ Directly working with state in memory
    state = state_cache.get(chat_id)
    if not state:
        bot.send_message(chat_id, "‚ö†Ô∏è State not found. Please try again.")
        return

    characteristics = state.get("characteristics", {})

    if not characteristics:
        bot.send_message(chat_id, "‚ö†Ô∏è You don't have any characteristics yet.")
        from handlers.game_handler import send_buttons
        send_buttons(chat_id)  # ‚úÖ Show menu without saving buttons in state
        return

    # ‚úÖ Create message with characteristics
    message_text = "üìä *Your characteristics:*\n"
    for key, char in characteristics.items():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ name –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –ø—É—Å—Ç—ã–º
        name = char.get('name')
        if name:  # –ï—Å–ª–∏ name —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—É—Å—Ç–æ–π
            value = char.get('value', 0)
            
            # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã –∏ —Å—É—Ñ—Ñ–∏–∫—Å—ã –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö
            name = re.sub(r'\s*\[.*?\]\s*', '', name)
            
            message_text += f"üîπ {name}: *{value}*\n"

    #bot.send_message(chat_id, message_text, parse_mode="Markdown")

    from handlers.game_handler import send_buttons
    send_buttons(chat_id, message_text)  # ‚úÖ Show menu without duplicating buttons
