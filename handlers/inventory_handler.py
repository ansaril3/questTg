# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
from config import bot, chapters  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º bot –∏–∑ config.py
from utils.state_manager import load_state, save_state
from handlers.game_handler import send_options_keyboard
import telebot.types as types

# –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è (—Å –∑–æ–ª–æ—Ç—ã–º–∏ –º–æ–Ω–µ—Ç–∞–º–∏)

@bot.message_handler(func=lambda message: message.text == "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
def show_inventory(message):
    chat_id = message.chat.id
    state = load_state(chat_id)

    inventory = state.get("inventory", [])
    inventory_text = "\n".join(
        f"üîπ {item}" for item in inventory
    ) if inventory else "üì≠ –ü—É—Å—Ç–æ"

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    bot.send_message(chat_id, f"üéí –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:\n{inventory_text}")

    markup = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)

    for item in inventory:
        # –ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç [usable], —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "Use"
        if "[usable]" in item:
            item_name = item.replace("[usable]", "").strip()
            use_button = f"Use {item_name}"
            markup.add(types.KeyboardButton(use_button))

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    markup.add(
        types.KeyboardButton("üì• –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–≥—Ä—É"),
        types.KeyboardButton("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—É"),
        types.KeyboardButton("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"),
        types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É")
    )

    bot.send_message(chat_id, ".", reply_markup=markup)


# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "Use"
@bot.message_handler(func=lambda message: message.text.startswith("Use "))
def handle_use_item(message):
    chat_id = message.chat.id
    state = load_state(chat_id)

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–í–æ–ª—à–µ–±–Ω—ã–π –º–µ—á")
    item_name = message.text.replace("Use ", "").strip()
    use_chapter_key = f"Use_{item_name}"

    if use_chapter_key in chapters:
        state["chapter"] = use_chapter_key
        save_state(chat_id, state)
        from handlers.game_handler import send_chapter
        send_chapter(chat_id)
    else:
        bot.send_message(chat_id, f"‚ö†Ô∏è –ì–ª–∞–≤–∞ '{use_chapter_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    show_inventory(message)

    # –ü–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
    send_options_keyboard(chat_id, chapters.get(state["chapter"]))
