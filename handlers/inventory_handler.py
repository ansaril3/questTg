from config import bot, chapters  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º bot –∏–∑ config.py
from utils.state_manager import get_state, state_cache
from handlers.game_handler import send_buttons, send_chapter, show_menu
import telebot.types as types

# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
@bot.message_handler(func=lambda message: message.text == "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
def show_inventory(message):
    chat_id = message.chat.id
    state = get_state(chat_id)  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å–æ —Å—Ç–µ–π—Ç–æ–º –≤ –ø–∞–º—è—Ç–∏
    
    # ‚úÖ –ü–µ—Ä–µ–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–ª–∞–≤—ã
    buttons = [types.KeyboardButton(text) for text in state.get("options", {}).keys()]

    inventory_list = state.get("inventory", [])
    gold = state.get("gold", 0)

    if not inventory_list and gold == 0:
        bot.send_message(chat_id, "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
        show_menu(chat_id)
        return
    
    message_text = "üéí *–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:*\n"
    
    if gold > 0:
        message_text += f"üí∞ –ó–æ–ª–æ—Ç–æ: {gold}\n"

    # ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    for item in inventory_list:
        print(f"Inventory item: {item}")
        if "[usable]" in item:
            item_name = item.replace("[usable]", "").strip()
            # ‚úÖ –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ —á–µ—Ä–µ–∑ types.KeyboardButton
            buttons.append(types.KeyboardButton(f"Use {item_name}"))
            message_text += f"üîπ {item_name} (‚ú® usable)\n"
        else:
            message_text += f"üîπ {item}\n"
    
    bot.send_message(chat_id, f"\n{message_text}", parse_mode="Markdown")

    # ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    send_buttons(chat_id)

# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "Use"
@bot.message_handler(func=lambda message: message.text.startswith("Use "))
def handle_use_item(message):
    chat_id = message.chat.id
    state = state_cache[chat_id]  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å–æ —Å—Ç–µ–π—Ç–æ–º –≤ –ø–∞–º—è—Ç–∏

    # ‚úÖ –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–í–æ–ª—à–µ–±–Ω—ã–π –º–µ—á")
    item_name = message.text.replace("Use ", "").strip()
    use_chapter_key = f"use_{item_name}"

    if use_chapter_key in chapters:
        # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≥–ª–∞–≤—É –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
        if state["history"] and state["history"][-1] != state["chapter"]:
            state["history"].append(state["chapter"])

        # ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–æ–≤—É—é –≥–ª–∞–≤—É
        state["chapter"] = use_chapter_key
        send_chapter(chat_id)
    else:
        bot.send_message(chat_id, f"‚ö†Ô∏è –ì–ª–∞–≤–∞ '{use_chapter_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    # ‚úÖ –£–±–∏—Ä–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ –≥–ª–∞–≤—ã (–≤—ã–∑–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏—Å–∫–ª—é—á—ë–Ω)
