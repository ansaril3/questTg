from config import bot, instructions, first_instruction, chapters
from utils.state_manager import state_cache
from handlers.game_handler import send_chapter
import telebot.types as types
import os

DATA_DIR = "data"  # üìÇ –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏

# ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
def send_instruction(chat_id):
    state = state_cache[chat_id]  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å–æ —Å—Ç–µ–π—Ç–æ–º –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
    instruction_key = state.get("instruction")
    instruction = instructions.get(instruction_key)

    if not instruction:
        bot.send_message(chat_id, "‚ö†Ô∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # ‚úÖ –û—á–∏—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    state["options"] = {}

    for action in instruction:
        action_type = action["type"]
        value = action["value"]

        if action_type == "text":
            bot.send_message(chat_id, value)

        elif action_type == "image":
            image_path = DATA_DIR + value.replace("\\", "/")
            if os.path.exists(image_path):
                with open(image_path, "rb") as photo:
                    bot.send_photo(chat_id, photo)
            else:
                bot.send_message(chat_id, f"‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {value}")

        elif action_type == "btn":
            state["options"][value["text"]] = value["target"]

        elif action_type == "goto":
            state["instruction"] = value
            send_instruction(chat_id)  # ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            return
        
        elif action_type == "if":
            condition = value.get("condition")
            if evaluate_condition(state, condition):
                for inner_action in value.get("actions", []):
                    handle_instruction_action(chat_id, inner_action)
            else:
                for inner_action in value.get("else_actions", []):
                    handle_instruction_action(chat_id, inner_action)

        elif action_type == "xbtn":
            state["options"][value["text"]] = value["target"]

    # ‚úÖ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π
    send_instruction_keyboard(chat_id, state)

# ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤–Ω—É—Ç—Ä–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
def handle_instruction_action(chat_id, action):
    state = state_cache[chat_id]  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å—Ç–µ–π—Ç–æ–º
    action_type = action["type"]
    value = action["value"]

    if action_type == "text":
        bot.send_message(chat_id, value)

    elif action_type == "image":
        image_path = os.path.join(DATA_DIR, value.replace("\\", "/"))
        if os.path.exists(image_path):
            with open(image_path, "rb") as photo:
                bot.send_photo(chat_id, photo)
        else:
            bot.send_message(chat_id, f"‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {value}")

    elif action_type == "btn":
        state["options"][value["text"]] = value["target"]

    elif action_type == "goto":
        state["instruction"] = value
        send_instruction(chat_id)  # ‚úÖ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥

# ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
def send_instruction_keyboard(chat_id, state):
    markup = types.ReplyKeyboardMarkup(row_width=2, one_time_keyboard=True)
    
    # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    buttons = [types.KeyboardButton(option) for option in state.get("options", {}).keys()]
    markup.add(*buttons)
    
    # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∏–≥—Ä—É
    markup.add(types.KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É"))
    
    bot.send_message(chat_id, ".", reply_markup=markup)

# ‚úÖ –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
@bot.message_handler(func=lambda message: message.text == "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
def enter_instruction(message):
    chat_id = message.chat.id
    state = state_cache[chat_id]  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å–æ —Å—Ç–µ–π—Ç–æ–º –≤ –ø–∞–º—è—Ç–∏
    state["instruction"] = first_instruction  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    send_instruction(chat_id)

# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
@bot.message_handler(func=lambda message: message.text in get_instruction_options())
def handle_instruction_choice(message):
    chat_id = message.chat.id
    state = state_cache[chat_id]  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å–æ —Å—Ç–µ–π—Ç–æ–º –≤ –ø–∞–º—è—Ç–∏
    instruction_key = state.get("instruction")
    instruction = instructions.get(instruction_key)

    if not instruction:
        bot.send_message(chat_id, "‚ö†Ô∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    for action in instruction:
        if action["type"] in ["btn", "xbtn"] and action["value"]["text"] == message.text:
            target = action["value"]["target"]
            if target in instructions:
                state["instruction"] = target
                send_instruction(chat_id)
                return

    bot.send_message(chat_id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")

# ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—ã–±–æ—Ä–∞ (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è)
def get_instruction_options():
    options = set()
    for instruction in instructions.values():
        for action in instruction:
            if action["type"] in ["btn", "xbtn"]:
                options.add(action["value"]["text"])
    return options

# ‚úÖ –í—ã—Ö–æ–¥ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –∏–≥—Ä—É
@bot.message_handler(func=lambda message: message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É")
def exit_instruction(message):
    chat_id = message.chat.id
    state = state_cache[chat_id]  # ‚úÖ –†–∞–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —Å–æ —Å—Ç–µ–π—Ç–æ–º –≤ –ø–∞–º—è—Ç–∏
    
    # ‚úÖ –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –≥–ª–∞–≤–µ
    state["instruction"] = None

    # ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –≥–ª–∞–≤—ã (–Ω–µ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)
    send_chapter(chat_id)
