from dataclasses import dataclass, field
import os
import json
from dotenv import load_dotenv
from telebot import TeleBot

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

@dataclass
class Config:
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    TOKEN: str = os.getenv("TOKEN")
    FIREBASE_PROJECT_ID: str = os.getenv("FIREBASE_PROJECT_ID")
    MEASUREMENT_ID: str = os.getenv("MEASUREMENT_ID")
    API_SECRET: str = os.getenv("API_SECRET")
    PROVIDER_TOKEN: str = os.getenv("PROVIDER_TOKEN")
    TEST_PROVIDER_TOKEN: str = os.getenv("TEST_PROVIDER_TOKEN")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
    CURRENCY: str = "RUB"
    PRICE: str = "9900"

    # –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã (0 ‚Äî —Ç–µ—Å—Ç–æ–≤—ã–π, 1 ‚Äî –ø—Ä–æ–¥–∞–∫—à–Ω)
    PROD_MODE: int = 0

    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
    CHAPTERS_FILE: str = "data/chapters.json"
    INSTRUCTIONS_FILE: str = "data/instructions.json"
    SAVES_DIR: str = "saves"
    DATA_DIR: str = "data"

    # –õ–∏–º–∏—Ç—ã
    HISTORY_LIMIT: int = 10
    SAVES_LIMIT: int = 5

    # –ö–Ω–æ–ø–∫–∏
    COMMON_BUTTONS: list = field(default_factory=lambda: [
        "üì• Save game",
        "üì§ Load game",
        "üìä Characteristics",
        "üéí Inventory",
        "üìñ Instructions"
    ])

    # –î–∞–Ω–Ω—ã–µ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑ JSON
    chapters: dict = field(default_factory=dict)
    instructions: dict = field(default_factory=dict)

    # –ü–µ—Ä–≤—ã–µ –≥–ª–∞–≤—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    first_chapter: str = None
    first_instruction: str = None

    def __post_init__(self):
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if not os.path.exists(self.SAVES_DIR):
            os.makedirs(self.SAVES_DIR)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
        self.chapters = self.load_json(self.CHAPTERS_FILE)
        self.instructions = self.load_json(self.INSTRUCTIONS_FILE)

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –≥–ª–∞–≤—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        self.first_chapter = list(self.chapters.keys())[0] if self.chapters else None
        self.first_instruction = list(self.instructions.keys())[0] if self.instructions else None

    @staticmethod
    def load_json(file_path):
        if os.path.exists(file_path):
            with open(file_path, "r", encoding="utf-8") as file:
                return json.load(file)
        return {}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config()

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
bot = TeleBot(config.TOKEN)